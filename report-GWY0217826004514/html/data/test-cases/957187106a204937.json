{
  "uid" : "957187106a204937",
  "name" : "test001_login",
  "fullName" : "TestCases.test_groupCall.Test_groupCall#test001_login",
  "historyId" : "7d3ca9d0eccee10bcc7c5cfd521330c8",
  "time" : { },
  "description" : "登入选择单位",
  "descriptionHtml" : "<p>登入选择单位</p>\n",
  "status" : "broken",
  "statusMessage" : "uiautomator2.exceptions.SessionBrokenError: ('cn.vsx.vc', 'package not found\\n')",
  "statusTrace" : "cmdopt = '192.168.0.116'\n\n    @pytest.fixture(scope=\"session\")  # 初始化开始连接设备\n    def connectDevice(cmdopt):\n        address = cmdopt\n        d = u2.connect(addr=address)\n        d.set_fastinput_ime(True)\n>       driver = d.session(\"cn.vsx.vc\")\n\n..\\TestCases\\conftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = uiautomator2 object for 192.168.0.116:7912, pkg_name = 'cn.vsx.vc'\nattach = False, launch_timeout = None\n\n    def session(self, pkg_name=None, attach=False, launch_timeout=None):\n        \"\"\"\n        Create a new session\n    \n        Args:\n            pkg_name (str): android package name\n            attach (bool): attach to already running app\n            launch_timeout (int): launch timeout\n    \n        Raises:\n            requests.HTTPError, SessionBrokenError\n        \"\"\"\n        if pkg_name is None:\n            return self._default_session\n    \n        if not attach:\n            request_data = {\"flags\": \"-W -S\"}\n            if launch_timeout:\n                request_data[\"timeout\"] = str(launch_timeout)\n            resp = self._reqsess.post(\n                self.path2url(\"/session/\" + pkg_name), data=request_data)\n            if resp.status_code == 410:  # Gone\n>               raise SessionBrokenError(pkg_name, resp.text)\nE               uiautomator2.exceptions.SessionBrokenError: ('cn.vsx.vc', 'package not found\\n')\n\n..\\venv\\lib\\site-packages\\uiautomator2\\__init__.py:1079: SessionBrokenError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "cmdopt",
    "time" : {
      "start" : 1551265142833,
      "stop" : 1551265142833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "connectDevice",
    "time" : {
      "start" : 1551265142833,
      "stop" : 1551265144035,
      "duration" : 1202
    },
    "status" : "broken",
    "statusMessage" : "uiautomator2.exceptions.SessionBrokenError: ('cn.vsx.vc', 'package not found\\n')\n",
    "statusTrace" : "  File \"E:\\atx-pytest\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"E:\\atx-pytest\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 923, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"E:\\atx-pytest\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 778, in call_fixture_func\n    res = next(it)\n  File \"E:\\atx-pytest\\TestCases\\conftest.py\", line 29, in connectDevice\n    driver = d.session(\"cn.vsx.vc\")\n  File \"E:\\atx-pytest\\venv\\lib\\site-packages\\uiautomator2\\__init__.py\", line 1079, in session\n    raise SessionBrokenError(pkg_name, resp.text)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "testStage" : {
    "description" : "登入选择单位",
    "status" : "broken",
    "statusMessage" : "uiautomator2.exceptions.SessionBrokenError: ('cn.vsx.vc', 'package not found\\n')",
    "statusTrace" : "cmdopt = '192.168.0.116'\n\n    @pytest.fixture(scope=\"session\")  # 初始化开始连接设备\n    def connectDevice(cmdopt):\n        address = cmdopt\n        d = u2.connect(addr=address)\n        d.set_fastinput_ime(True)\n>       driver = d.session(\"cn.vsx.vc\")\n\n..\\TestCases\\conftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = uiautomator2 object for 192.168.0.116:7912, pkg_name = 'cn.vsx.vc'\nattach = False, launch_timeout = None\n\n    def session(self, pkg_name=None, attach=False, launch_timeout=None):\n        \"\"\"\n        Create a new session\n    \n        Args:\n            pkg_name (str): android package name\n            attach (bool): attach to already running app\n            launch_timeout (int): launch timeout\n    \n        Raises:\n            requests.HTTPError, SessionBrokenError\n        \"\"\"\n        if pkg_name is None:\n            return self._default_session\n    \n        if not attach:\n            request_data = {\"flags\": \"-W -S\"}\n            if launch_timeout:\n                request_data[\"timeout\"] = str(launch_timeout)\n            resp = self._reqsess.post(\n                self.path2url(\"/session/\" + pkg_name), data=request_data)\n            if resp.status_code == 410:  # Gone\n>               raise SessionBrokenError(pkg_name, resp.text)\nE               uiautomator2.exceptions.SessionBrokenError: ('cn.vsx.vc', 'package not found\\n')\n\n..\\venv\\lib\\site-packages\\uiautomator2\\__init__.py:1079: SessionBrokenError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dd3f3a22768bf249",
      "name" : "log",
      "source" : "dd3f3a22768bf249.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "c4cada941e7289ba",
      "name" : "stdout",
      "source" : "c4cada941e7289ba.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "d8c3b541a6045aa3",
      "name" : "stderr",
      "source" : "d8c3b541a6045aa3.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "login"
  }, {
    "name" : "feature",
    "value" : "group_call"
  }, {
    "name" : "parentSuite",
    "value" : "TestCases"
  }, {
    "name" : "suite",
    "value" : "test_groupCall"
  }, {
    "name" : "subSuite",
    "value" : "Test_groupCall"
  }, {
    "name" : "host",
    "value" : "WINMICR-BOITIN6"
  }, {
    "name" : "thread",
    "value" : "336960-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_groupCall"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "957187106a204937.json",
  "parameterValues" : [ ]
}